version: '3.8'

services:
  cryptomate:
    image: cryptomate:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      cache_from:
        - node:20-alpine
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: cryptomate-bot
    restart: always
    environment:
      # Discord Configuration
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_APP_ID=${DISCORD_APP_ID}
      - DISCORD_PUBLIC_KEY=${DISCORD_PUBLIC_KEY}
      # LLM Configuration
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER:-anthropic}
      # App Configuration
      - NODE_ENV=production
      - DEFAULT_TIMEFRAME=${DEFAULT_TIMEFRAME:-1h}
      - CACHE_TTL_SECONDS=${CACHE_TTL_SECONDS:-60}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      # Binance Configuration
      - BINANCE_BASE_URL=${BINANCE_BASE_URL:-https://api.binance.com}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    networks:
      - cryptomate-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
        compress: "true"
    healthcheck:
      test: ["CMD", "node", "-e", "process.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Redis for enhanced caching (future enhancement)
  # redis:
  #   image: redis:7-alpine
  #   container_name: cryptomate-redis
  #   restart: always
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - cryptomate-network
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 128M

  # Optional: Monitoring with Prometheus (future enhancement)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: cryptomate-prometheus
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   networks:
  #     - cryptomate-network
  #   profiles:
  #     - monitoring

networks:
  cryptomate-network:
    driver: bridge
    name: cryptomate-prod-net
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local